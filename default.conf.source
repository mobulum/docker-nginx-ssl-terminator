# List of application servers

upstream router_servers {
  server ${UPSTREAM_URL};
}

server {
  listen      [::]:80;
  listen      80 default;
  server_name servers-http;

  location = /nginx_stub_status {
    stub_status on;
    access_log off;
    allow ::1;
    allow 127.0.0.1;
    allow 172.17.0.1;
    deny all;
  }

  location / {
    add_header          Strict-Transport-Security "max-age=31536000; includeSubdomains";
    add_header          Access-Control-Allow-Origin "*";
    add_header          Access-Control-Allow-Methods "GET, POST, DELETE, PUT";
    add_header          Access-Control-Allow-Headers "Content-Type, Accept, Authorization";
    add_header          Alternate-Protocol  "443:h2";
    return 301 https://${SERVER_NAME}\$request_uri;
  }
}

server {
  error_log syslog:server=${SYSLOG_SERVER_HOST};
  access_log syslog:server=${SYSLOG_SERVER_HOST};

  listen      [::]:443 ssl http2;
  listen      443 ssl http2 default_server;
  server_name ${SERVER_NAME};

  ssl on;
  ssl_session_cache shared:SSL:20m;
  ssl_session_timeout 10m;
  ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
  ssl_prefer_server_ciphers on;
  ssl_certificate     ${TLS_SERVER_CRT_NAME};
  ssl_certificate_key ${TLS_SERVER_KEY_NAME};

  keepalive_timeout   70;

  location = /nginx_stub_status {
    stub_status on;
    access_log off;
    allow ::1;
    allow 127.0.0.1;
    allow 172.17.0.1;
    deny all;
  }

  location / {

    proxy_pass http://router_servers;
    proxy_http_version 1.1;
    proxy_set_header Host ${SERVER_NAME};
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port \$server_port;
    proxy_set_header X-Request-Start \$msec;
    proxy_set_header X-Forwarded-Host \$server_name;
  }
}
